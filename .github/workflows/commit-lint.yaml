name: Conventional Commits

on:
  pull_request:
    types: [opened, synchronize, reopened, edited]
    branches: [ main, master, development ]
  pull_request_target:
    branches: [ main, master, development ]
  push:
    branches: [ main, master, development ]

permissions:
  contents: read
  pull-requests: read

jobs:
  commit-lint:
    name: Validate Conventional Commits
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 10
          
      - name: Checkout PR
        if: github.event_name == 'pull_request_target'
        run: |
          git fetch origin "pull/${{ github.event.pull_request.number }}/head:pr-${{ github.event.pull_request.number }}"
          git checkout "pr-${{ github.event.pull_request.number }}"
          
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: 'npm'
          cache-dependency-path: notes/package-lock.json
          
      - name: Install commitlint
        working-directory: notes
        run: |
          npm install --save-dev @commitlint/config-conventional @commitlint/cli
          
      - name: Copy commitlint config
        run: |
          cp .commitlintrc.json notes/
          
      - name: Validate commits
        working-directory: notes
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ] || [ "${{ github.event_name }}" = "pull_request_target" ]; then
            # For PRs, get the base branch
            git fetch origin main
            
            # Get all commits in the PR
            for commit in $(git rev-list HEAD ^origin/main); do
              COMMIT_MSG=$(git log -1 --format="%s" $commit)
              AUTHOR_EMAIL=$(git log -1 --format="%ae" $commit)
              if [[ ! $AUTHOR_EMAIL =~ .*\[bot\]@.*|.*bot@.* ]]; then
                echo "Checking commit: $COMMIT_MSG"
                echo "$COMMIT_MSG" | npx commitlint --verbose || true
              else
                echo "Skipping bot commit: $COMMIT_MSG"
              fi
            done
          else
            # For pushes, check only the latest commit if not from a bot
            AUTHOR_EMAIL=$(git log -1 --format="%ae")
            if [[ ! $AUTHOR_EMAIL =~ .*\[bot\]@.*|.*bot@.* ]]; then
              npx commitlint --from HEAD~1 --to HEAD --verbose
            fi
          fi
        
      - name: Check PR title
        if: github.event_name == 'pull_request' || github.event_name == 'pull_request_target'
        working-directory: notes
        run: |
          # Skip PR title check if PR is from a bot
          if [[ ! "${{ github.event.pull_request.user.login }}" =~ .*\[bot\]$ ]]; then
            echo "${{ github.event.pull_request.title }}" | npx commitlint --verbose
          fi